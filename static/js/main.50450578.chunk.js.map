{"version":3,"sources":["components/ContactForm/ContactFormik.js","components/Filter/Filter.js","components/Context/Context.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.jsx","index.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css"],"names":["ContactFormik","state","expLevel","skills","this","initialValues","name","number","experience","licence","validationSchema","Yup","shape","min","max","required","positive","integer","onSubmit","values","setSubmitting","resetForm","props","contacts","some","contact","alert","formSubmitHandler","id","uuidv4","isSubmitting","className","s","contactForm","htmlFor","labelBlock","type","component","role","aria-labelledby","groupBlock","title","map","exp","inputBox","value","skill","button","disabled","length","Component","Filter","onChange","createContext","ContactItem","Context","Consumer","deleteContact","item","join","onClick","ContactList","filterContacts","filter","Object","val","toString","toLowerCase","includes","filteredContacts","contactList","App","changeFilter","target","setState","newContact","prevState","withoutDelContactArray","localStorageContacts","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","Provider","defaultProps","root","document","querySelector","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.50450578.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactFormik extends Component {\n    static propTypes = {\n        formSubmitHandler: PropTypes.func.isRequired,\n        contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string.isRequired,\n          number: PropTypes.string.isRequired,\n        })),\n    }\n\n    state = {\n        expLevel: ['junior', 'middle', 'senior'],\n        skills: ['HTML', 'CSS', 'JS', 'SCSS', 'Git', 'React']\n    }\n\n    // componentDidMount(){\n    //   window.addEventListener('keydown', e => {\n    //     e.code==='Enter' && e.target.name==='expirience' && ;\n    //   })\n    // }\n\n    render() {\n        const { expLevel, skills } = this.state;\n        return <Formik\n          initialValues={{\n            name: '',\n            number:'',\n            experience: '',\n            licence: false,\n            skills: [],\n          }}\n          validationSchema={Yup.object().shape({\n            name: Yup.string().min(2, 'Too Short!').max(30, 'Too Long!').required('Required'),\n            number: Yup.number().max(1000000000000, 'Too Long!').positive().integer().required('Required'),\n          })\n          }\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n              const { name, number } = values;\n              if(this.props.contacts.some(contact => contact.name===name || contact.number===number) ){\n                alert(`Contact with such ${name} or ${number} is already in Phonebook`);\n                setSubmitting(false);\n                return;\n              }\n\n              this.props.formSubmitHandler({...values, id: uuidv4()});\n              setSubmitting(false);\n              resetForm({\n                name: '',\n                number:'',\n                experience: '',\n                licence: false,\n                skills: [],\n              })\n          }}\n        >\n       {({isSubmitting, values}) => (\n         <Form className={s.contactForm}>\n           <label htmlFor=\"name\">Name </label>\n           <Field className={s.labelBlock} type=\"text\" name=\"name\" />\n           <ErrorMessage name=\"name\" component=\"div\" />\n           <label htmlFor=\"number\">Number </label>\n           <Field className={s.labelBlock} type=\"text\" name=\"number\" />\n           <ErrorMessage name=\"number\" component=\"div\" />\n           <div  role=\"group\" aria-labelledby=\"radio-group\" className={`${s.labelBlock} ${s.groupBlock}`}>\n                <h3 className={s.title}>Your Level</h3>\n                {expLevel.map(exp =>\n                    <label key={exp}>\n                        <Field type=\"radio\"  className={s.inputBox} name=\"experience\" value={exp} />\n                        {exp}\n                    </label>\n                )}\n            </div>\n            <div role=\"group\" aria-labelledby=\"checkbox-group\" className={`${s.labelBlock} ${s.groupBlock}`}>\n              <h3 className={s.title}>Your Skills</h3>\n              {skills.map(skill =>\n                <label key={skill}>\n                    <Field type=\"checkbox\"  className={s.inputBox} name=\"skills\" value={skill} />\n                    {skill}\n                </label>\n              )}\n            </div>\n            <label className={s.labelBlock}>\n                <Field type=\"checkbox\"  className={s.inputBox} name=\"licence\" id=\"licence\" />\n                All data is right\n            </label>\n\n           <button type=\"submit\" className={s.button} disabled={isSubmitting || values.experience==='' || !values.licence || values.name==='' || values.number==='' || values.skills.length===0}>Add Contact</button>\n         </Form>\n       )}\n     </Formik>\n    }\n}\n\nexport default ContactFormik;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter ({value, onChange}) {\n        return <div className={s.labelBlock} >\n            <h4  className={s.title}>Find contacts by name, number or level</h4>\n            <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n            </div>\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import { createContext } from 'react';\n\nexport default createContext();","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport Context from '../Context';\nimport s from './ContactItem.module.css';\n\nclass ContactItem extends Component {\n\n    render() {\n        const { id, name, number, experience, skills } = this.props;\n        return (\n            <Context.Consumer>\n                {({deleteContact}) => {\n                    return (<li className={s.item} >\n                      <span>{name}:</span>\n                      <span>{number},</span>\n                      <span>{experience},</span>\n                      <span>skills: {skills.join(', ')}</span>\n                      <button type=\"button\" onClick={()=> deleteContact(id)}>Delete</button>\n                    </li>)\n                }}\n            </Context.Consumer>\n        )\n    }\n}\n\nexport default ContactItem;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from '../ContactItem';\n\nclass ContactList extends Component {\n    static propTypes = {\n      // deleteContact: PropTypes.func.isRequired,\n      filter: PropTypes.string.isRequired,\n      contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          number: PropTypes.string.isRequired,\n          experience: PropTypes.string.isRequired,\n          skills: PropTypes.arrayOf(PropTypes.string.isRequired),\n      })),\n    }\n\n    filterContacts = () => {\n        const {contacts, filter} = this.props;\n        return contacts.filter(contact =>\n           Object.values(contact)\n            .some(val => val.toString().toLowerCase().includes(filter))\n        );\n    }\n\n    render() {\n        const filteredContacts = this.filterContacts();\n\n        return (\n          <ul className={s.contactList} >\n          {filteredContacts.map(({ id, name, number, experience, skills }) =>\n            <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            experience={experience}\n            skills={skills} />\n            )}\n          </ul>\n        )\n    }\n}\n\nexport default ContactList;","import React, { Component } from 'react';\nimport ContactFormik from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Context from './components/Context';\n\nclass App extends Component {\n    static defaultProps = {\n      contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', experience: 'junior', skills: ['HTML', 'CSS']},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12', experience: 'middle', skills: ['HTML', 'CSS', 'JS']},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79', experience: 'junior', skills: ['HTML', 'SCSS']},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26', experience: 'senior', skills: ['HTML', 'CSS', 'JS', 'React']},\n        {id: 'id-5', name: 'Ann Hits', number: '227-91-46', experience: 'junior', skills: ['JS']},\n        {id: 'id-6', name: 'Ed Clirence', number: '217-01-46', experience: 'middle', skills: ['HTML', 'CSS', 'JS']},\n      ],\n    }\n\n    static propTypes = {\n        //\n    }\n\n    state = {\n      // contacts: this.props.contacts,\n      contacts: [],\n      filter: '',\n      // deleteContact: (id) => {\n      //   this.setState((prevState) => {\n      //     const withoutDelContactArray = prevState.contacts.filter(contact => contact.id !==id)\n      //     return {\n      //       contacts: [...withoutDelContactArray]\n      //     }\n      //   })\n      // },\n    }\n\n    componentDidMount(){\n      const localStorageContacts = localStorage.getItem('contacts');\n      const parsedContacts = JSON.parse(localStorageContacts);\n      parsedContacts && this.setState({ contacts: parsedContacts });\n    }\n\n    componentDidUpdate(prevProps, prevState){\n      prevState!==this.state && localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n\n    changeFilter = ({ target: {name, value} }) => {\n      this.setState({\n        [name]: value.toLowerCase(),\n      });\n    }\n\n    formSubmitHandler = (newContact) => {\n        this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, newContact]\n        }\n      })\n    }\n\n    deleteContact = (id) => {\n      this.setState((prevState) => {\n        const withoutDelContactArray = prevState.contacts.filter(contact => contact.id !==id)\n        return {\n          contacts: [...withoutDelContactArray]\n        }\n      })\n    }\n\n    render() {\n      const { contacts, filter } = this.state;\n\n      return (\n        <Context.Provider value={{deleteContact: this.deleteContact}}>\n        <h1 className=\"title\">Phonebook</h1>\n        {/* <ContactForm onSubmit={this.formSubmitHandler} contacts={contacts} /> */}\n        <ContactFormik formSubmitHandler={this.formSubmitHandler} contacts={contacts}/>\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={contacts} filter={filter} />\n        </Context.Provider>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelBlock\":\"Filter_labelBlock__17eMJ\",\"title\":\"Filter_title__mtLuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"labelBlock\":\"ContactForm_labelBlock__f81Qb\",\"groupBlock\":\"ContactForm_groupBlock__q7zFY\",\"title\":\"ContactForm_title__3MqSl\",\"inputBox\":\"ContactForm_inputBox__1nc3p\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2KdFa\"};"],"sourceRoot":""}